{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nclass AuthService {\n  constructor() {\n    this.token = null;\n  }\n  async login(email, password) {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    return response.data;\n  }\n  async register(userData) {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    return response.data;\n  }\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n  getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('token');\n    }\n    return this.token;\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  logout() {\n    this.token = null;\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\nexport const authService = new AuthService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","AuthService","constructor","token","login","email","password","response","post","data","register","userData","setToken","localStorage","setItem","defaults","headers","common","getToken","getItem","isAuthenticated","logout","removeItem","authService"],"sources":["C:/Users/ethan/Documents/Code/un_seul_usage/Projet_2/frontend/src/services/auth.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\ninterface LoginResponse {\r\n  access_token: string;\r\n  token_type: string;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  full_name: string;\r\n  is_active: boolean;\r\n  is_superuser: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nclass AuthService {\r\n  private token: string | null = null;\r\n\r\n  async login(email: string, password: string): Promise<LoginResponse> {\r\n    const response = await axios.post(`${API_URL}/auth/login`, {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  async register(userData: Omit<User, 'id' | 'is_active' | 'is_superuser' | 'created_at' | 'updated_at'>): Promise<User> {\r\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\r\n    return response.data;\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n    localStorage.setItem('token', token);\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  getToken(): string | null {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('token');\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAiBxE,MAAMC,WAAW,CAAC;EAAAC,YAAA;IAAA,KACRC,KAAK,GAAkB,IAAI;EAAA;EAEnC,MAAMC,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAA0B;IACnE,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,aAAa,EAAE;MACzDQ,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,QAAQA,CAACC,QAAuF,EAAiB;IACrH,MAAMJ,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,gBAAgB,EAAEc,QAAQ,CAAC;IACvE,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEAG,QAAQA,CAACT,KAAa,EAAE;IACtB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACpCP,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUd,KAAK,EAAE;EACpE;EAEAe,QAAQA,CAAA,EAAkB;IACxB,IAAI,CAAC,IAAI,CAACf,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,GAAGU,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC5C;IACA,OAAO,IAAI,CAAChB,KAAK;EACnB;EAEAiB,eAAeA,CAAA,EAAY;IACzB,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,CAAC,CAAC;EAC1B;EAEAG,MAAMA,CAAA,EAAG;IACP,IAAI,CAAClB,KAAK,GAAG,IAAI;IACjBU,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO1B,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;AACF;AAEA,OAAO,MAAMM,WAAW,GAAG,IAAItB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}